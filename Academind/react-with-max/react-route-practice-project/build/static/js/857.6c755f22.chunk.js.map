{"version":3,"file":"static/js/857.6c755f22.chunk.js","mappings":"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","sources":["hooks/use-http.js","lib/api.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n\t'https://react-http-f44be-default-rtdb.europe-west1.firebasedatabase.app';\n\nexport async function getAllQuotes() {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quotes.');\n\t}\n\n\tconst transformedQuotes = [];\n\n\tfor (const key in data) {\n\t\tconst quoteObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedQuotes.push(quoteObj);\n\t}\n\n\treturn transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quote.');\n\t}\n\n\tconst loadedQuote = {\n\t\tid: quoteId,\n\t\t...data,\n\t};\n\n\treturn loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(quoteData),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not create quote.');\n\t}\n\n\treturn null;\n}\n\nexport async function addComment(requestData) {\n\tconst response = await fetch(\n\t\t`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(requestData.commentData),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\t);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not add comment.');\n\t}\n\n\treturn { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not get comments.');\n\t}\n\n\tconst transformedComments = [];\n\n\tfor (const key in data) {\n\t\tconst commentObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedComments.push(commentObj);\n\t}\n\n\treturn transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__yyqV8\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__RM2lv\",\"loading\":\"NewCommentForm_loading__uC-39\",\"control\":\"NewCommentForm_control__jdLFU\",\"actions\":\"NewCommentForm_actions__RR2hj\"};","import { useRef, useEffect } from 'react';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { addComment } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\nimport classes from './NewCommentForm.module.css';\r\n\r\nconst NewCommentForm = (props) => {\r\n\tconst commentTextRef = useRef();\r\n\r\n\tconst { sendRequest, status, error } = useHttp(addComment);\r\n\tconst { onAddedComment } = props;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (status === 'completed' && !error) {\r\n\t\t\tonAddedComment();\r\n\t\t}\r\n\t}, [status, error, onAddedComment]);\r\n\r\n\tconst submitFormHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst enteredText = commentTextRef.current.value;\r\n\r\n\t\t// optional: Could validate here\r\n\r\n\t\t// send comment to server\r\n\t\tsendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className={classes.form} onSubmit={submitFormHandler}>\r\n\t\t\t{status === 'pending' && (\r\n\t\t\t\t<div className='centerd'>\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t\t<div className={classes.control} onSubmit={submitFormHandler}>\r\n\t\t\t\t<label htmlFor='comment'>Your Comment</label>\r\n\t\t\t\t<textarea id='comment' rows='5' ref={commentTextRef}></textarea>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.actions}>\r\n\t\t\t\t<button className='btn'>Add Comment</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default NewCommentForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__ix4NO\"};","import classes from './CommentItem.module.css';\r\n\r\nconst CommentItem = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <p>{props.text}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CommentItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__S-hho\"};","import CommentItem from './CommentItem';\r\nimport classes from './CommentsList.module.css';\r\n\r\nconst CommentsList = (props) => {\r\n  return (\r\n    <ul className={classes.comments}>\r\n      {props.comments.map((comment) => (\r\n        <CommentItem key={comment.id} text={comment.text} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import { useState, useEffect, useCallback } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport useHttp from '../../hooks/use-http';\r\nimport { getAllComments } from '../../lib/api';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\n\r\nimport classes from './Comments.module.css';\r\nimport NewCommentForm from './NewCommentForm';\r\nimport CommentsList from './CommentsList';\r\n\r\nconst Comments = () => {\r\n\tconst [isAddingComment, setIsAddingComment] = useState(false);\r\n\tconst params = useParams();\r\n\r\n\tconst { quoteId } = params;\r\n\r\n\tconst { sendRequest, status, data: loadedComments, error } = useHttp(getAllComments);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tconst startAddCommentHandler = () => {\r\n\t\tsetIsAddingComment(true);\r\n\t};\r\n\r\n\tconst addedCommentHandler = useCallback(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tlet comments;\r\n\r\n\tif (status === 'pending') {\r\n\t\tcomments = (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tif (status === 'completed' && loadedComments && loadedComments.length > 0) {\r\n\t\tcomments = <CommentsList comments={loadedComments} />;\r\n\t}\r\n\r\n\tif (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\r\n\t\tcomments = <p className='centered'>No comments were added yet.</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section className={classes.comments}>\r\n\t\t\t<h2>User Comments</h2>\r\n\t\t\t{!isAddingComment && (\r\n\t\t\t\t<button className='btn' onClick={startAddCommentHandler}>\r\n\t\t\t\t\tAdd a Comment\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{isAddingComment && (\r\n\t\t\t\t<NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler} />\r\n\t\t\t)}\r\n\t\t\t{comments}\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Comments;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__l7OAp\"};","import classes from './HighlightedQuote.module.css';\r\n\r\nconst HighlightedQuote = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p>{props.text}</p>\r\n      <figcaption>{props.author}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedQuote;\r\n","import React, { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\n\r\nconst QuoteDetail = () => {\r\n\tconst params = useParams();\r\n\tconst match = useRouteMatch();\r\n\r\n\tconst { quoteId } = params;\r\n\r\n\tconst { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest(quoteId);\r\n\t}, [sendRequest, quoteId]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tif (error) {\r\n\t\treturn <p className='centered focused'>{error}</p>;\r\n\t}\r\n\r\n\tif (!loadedQuote.text) {\r\n\t\treturn <p>No quote found</p>;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n\t\t\t<Route path={match.path} exact>\r\n\t\t\t\t<div className='centered'>\r\n\t\t\t\t\t<Link className='btn--flat' to={`${match.url}/comments`}>\r\n\t\t\t\t\t\tLoad Comments\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Route>\r\n\r\n\t\t\t<Route path={`${match.path}/comments`}>\r\n\t\t\t\t<Comments />\r\n\t\t\t</Route>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default QuoteDetail;\r\n"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","props","commentTextRef","useRef","useHttp","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","className","classes","onSubmit","LoadingSpinner","htmlFor","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","length","onClick","author","match","useRouteMatch","path","exact","to","url"],"sourceRoot":""}