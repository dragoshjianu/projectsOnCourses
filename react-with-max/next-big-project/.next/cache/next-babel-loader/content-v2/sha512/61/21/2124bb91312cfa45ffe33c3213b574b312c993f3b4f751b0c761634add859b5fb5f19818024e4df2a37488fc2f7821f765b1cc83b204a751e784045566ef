{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Web Development\\\\projectsOnCourses\\\\react-with-max\\\\next-big-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/3/3b/Frauenkirche_and_Neues_Rathaus_Munich_March_2013.JPG\",\n    title: \"The First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["E:/Web Development/projectsOnCourses/react-with-max/next-big-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails"],"mappings":";;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC3B,sBACC,QAAC,YAAD;AACC,IAAA,KAAK,EAAC,0GADP;AAEC,IAAA,KAAK,EAAC,kBAFP;AAGC,IAAA,OAAO,EAAC,0BAHT;AAIC,IAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CATD;;KAAMA,a;;AAqDN,eAAeA,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\r\n\r\nconst MeetupDetails = () => {\r\n\treturn (\r\n\t\t<MeetupDetail\r\n\t\t\timage='https://upload.wikimedia.org/wikipedia/commons/3/3b/Frauenkirche_and_Neues_Rathaus_Munich_March_2013.JPG'\r\n\t\t\ttitle='The First Meetup'\r\n\t\t\taddress='Some Street 5, Some City'\r\n\t\t\tdescription='This is a first meetup'\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n\t//fetch data from an API or database\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://dragoshjianu:dragosh23@cluster0.nna1u.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tfallback: false,\r\n\t\tpaths: meetups.map((meetup) => ({ params: { meetupId: meetup._id.toString() } })),\r\n\t};\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n\t// fetch data for a single meetup\r\n\r\n\tconst meetupId = context.params.meetupId;\r\n\r\n\tconst client = await MongoClient.connect(\r\n\t\t'mongodb+srv://dragoshjianu:dragosh23@cluster0.nna1u.mongodb.net/meetups?retryWrites=true&w=majority'\r\n\t);\r\n\tconst db = client.db();\r\n\r\n\tconst meetupsCollection = db.collection('meetups');\r\n\r\n\tconst selectedMeetup = meetupsCollection.findOne({ _id: meetupId });\r\n\r\n\tclient.close();\r\n\r\n\treturn {\r\n\t\tprops: {\r\n\t\t\tmeetupData: selectedMeetup,\r\n\t\t},\r\n\t};\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}