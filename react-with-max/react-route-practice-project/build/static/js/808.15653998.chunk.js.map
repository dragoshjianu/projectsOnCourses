{"version":3,"file":"static/js/808.15653998.chunk.js","mappings":"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","sources":["hooks/use-http.js","lib/api.js","webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n\t'https://react-http-f44be-default-rtdb.europe-west1.firebasedatabase.app';\n\nexport async function getAllQuotes() {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quotes.');\n\t}\n\n\tconst transformedQuotes = [];\n\n\tfor (const key in data) {\n\t\tconst quoteObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedQuotes.push(quoteObj);\n\t}\n\n\treturn transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not fetch quote.');\n\t}\n\n\tconst loadedQuote = {\n\t\tid: quoteId,\n\t\t...data,\n\t};\n\n\treturn loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(quoteData),\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not create quote.');\n\t}\n\n\treturn null;\n}\n\nexport async function addComment(requestData) {\n\tconst response = await fetch(\n\t\t`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tbody: JSON.stringify(requestData.commentData),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t}\n\t);\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not add comment.');\n\t}\n\n\treturn { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n\tconst response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || 'Could not get comments.');\n\t}\n\n\tconst transformedComments = [];\n\n\tfor (const key in data) {\n\t\tconst commentObj = {\n\t\t\tid: key,\n\t\t\t...data[key],\n\t\t};\n\n\t\ttransformedComments.push(commentObj);\n\t}\n\n\treturn transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__nv3Ny\"};","import { Link } from 'react-router-dom';\r\n\r\nimport styles from './QuoteItem.module.css';\r\n\r\nconst QuoteItem = (props) => {\r\n\treturn (\r\n\t\t<li className={styles.item}>\r\n\t\t\t<figure>\r\n\t\t\t\t<blockquote>\r\n\t\t\t\t\t<p>{props.text}</p>\r\n\t\t\t\t</blockquote>\r\n\t\t\t\t<figcaption>{props.author}</figcaption>\r\n\t\t\t</figure>\r\n\t\t\t<Link to={`/quotes/${props.id}`} className='btn'>\r\n\t\t\t\tView Fullscreen\r\n\t\t\t</Link>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default QuoteItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__R+f-T\",\"sorting\":\"QuoteList_sorting__EEA4Z\"};","import { Fragment } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n\treturn quotes.sort((quoteA, quoteB) => {\r\n\t\tif (ascending) {\r\n\t\t\treturn quoteA.id > quoteB.id ? 1 : -1;\r\n\t\t} else {\r\n\t\t\treturn quoteA.id < quoteB.id ? 1 : -1;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\r\n\tconst queryParams = new URLSearchParams(location.search);\r\n\r\n\tconst isSortingAsc = queryParams.get('sort') === 'asc';\r\n\r\n\tconst sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\r\n\r\n\tconst changeSortingHandler = () => {\r\n\t\thistory.push({\r\n\t\t\tpathname: location.pathname,\r\n\t\t\tsearch: `sort=${isSortingAsc ? 'desc' : 'asc'}`,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className={classes.sorting}>\r\n\t\t\t\t<button onClick={changeSortingHandler}>\r\n\t\t\t\t\tSort {isSortingAsc ? 'Descending' : 'Ascending'}\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<ul className={classes.list}>\r\n\t\t\t\t{sortedQuotes.map((quote) => (\r\n\t\t\t\t\t<QuoteItem\r\n\t\t\t\t\t\tkey={quote.id}\r\n\t\t\t\t\t\tid={quote.id}\r\n\t\t\t\t\t\tauthor={quote.author}\r\n\t\t\t\t\t\ttext={quote.text}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default QuoteList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__5G1fQ\"};","import { Link } from 'react-router-dom';\r\nimport classes from './NoQuotesFound.module.css';\r\n\r\nconst NoQuotesFound = () => {\r\n\treturn (\r\n\t\t<div className={classes.noquotes}>\r\n\t\t\t<p>No quotes found!</p>\r\n\t\t\t<Link to={'/new-quote'} className='btn'>\r\n\t\t\t\tAdd a Quote\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NoQuotesFound;\r\n","import React, { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\n\r\nconst AllQuotes = () => {\r\n\tconst { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n\tuseEffect(() => {\r\n\t\tsendRequest();\r\n\t}, [sendRequest]);\r\n\r\n\tif (status === 'pending') {\r\n\t\treturn (\r\n\t\t\t<div className='centered'>\r\n\t\t\t\t<LoadingSpinner />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\tif (error) {\r\n\t\treturn <p className='centered focused'>{error}</p>;\r\n\t}\r\n\tif (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n\t\treturn <NoQuotesFound />;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<QuoteList quotes={loadedQuotes} />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"names":["httpReducer","state","action","type","data","error","status","responseData","errorMessage","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","props","className","styles","text","author","to","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","classes","onClick","pathname","map","quote","useHttp","loadedQuotes","useEffect","LoadingSpinner","length"],"sourceRoot":""}